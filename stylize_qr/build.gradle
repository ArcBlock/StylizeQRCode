plugins {
  id 'com.android.library'
  id 'org.jetbrains.kotlin.android'
  id 'maven-publish'
}
group='io.arcblock'

def getArtificatId = { ->
  return "stylize_qr"
}
def getVersionName = { ->
  return System.getenv('TAG_NAME') ?: "1.0.0"
}

android {
  compileSdk 31

  defaultConfig {
    minSdk 21
    targetSdk 31

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    consumerProguardFiles "consumer-rules.pro"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = '1.8'
  }
}

dependencies {
  implementation 'com.google.zxing:core:3.3.3'
  implementation 'androidx.core:core-ktx:1.7.0'
  implementation 'androidx.appcompat:appcompat:1.4.1'
  implementation 'com.google.android.material:material:1.5.0'
  testImplementation 'junit:junit:4.13.2'
  androidTestImplementation 'androidx.test.ext:junit:1.1.3'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
task sourceJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  archiveClassifier.set("sources")
}


publishing {
  repositories {
    maven {
      name = "GitHubPackages"
      url = uri("https://maven.pkg.github.com/ArcBlock/StylizeQRCode")
      credentials {
        username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
        password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
      }
    }
  }
  publications {
    maven(MavenPublication) {
      groupId group
      artifactId getArtificatId()
      version getVersionName()
      artifact("$buildDir/outputs/aar/${getArtificatId()}-release.aar")
      pom {
        withXml {
          def dependenciesNode = asNode().appendNode('dependencies')
          project.configurations.implementation.allDependencies.each {
            if (it.group != null || it.name != null || it.version != null || it.name == "unspecified") return

            def dependencyNode = dependenciesNode.appendNode('dependency')
            dependencyNode.appendNode('groupId', it.group)
            dependencyNode.appendNode('artifactId', it.name)
            dependencyNode.appendNode('version', it.version)
          }
        }
      }
    }
  }
}